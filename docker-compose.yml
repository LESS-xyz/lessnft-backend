services:
  db:
    image: postgres
    env_file:
      - ./.env
    volumes:
      - ./.docker/postgres-data:/var/lib/postgresql/data
    networks:
      dds2-net:
  web:
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - ./.env
    ports:
      - "${DOCKER_EXPOSE_PORT?8000}:8000"
    depends_on:
      - db
    volumes:
      - ./dds/:/code/dds/
      - ./media/:/code/media/
      - ./static/:/code/static/
    networks:
      dds2-net:
    command: python manage.py runserver 0.0.0.0:8000
  rates_checker:
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      - db
    restart: unless-stopped
    networks:
      dds2-net:
    command: ["python", "rates_checker.py"]
  tx_tracker:
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      - db
    restart: unless-stopped
    networks:
      dds2-net:
    command: ["python", "tx_tracker.py"]
  scanner_721:
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      - db
    restart: unless-stopped
    volumes:
      - ./dds/blocks:/code/blocks
      - ./logs:/code/logs/
    networks:
      dds2-net:
    command: ["python", "scaners/scaner_721.py"]
  scanner_1155:
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      - db
    restart: unless-stopped
    volumes:
      - ./dds/blocks:/code/blocks
      - ./logs:/code/logs/
    networks:
      dds2-net:
    command: ["python", "scaners/scaner_1155.py"]
  scanner_money:
    build: 
      context: .
      dockerfile: Dockerfile
    depends_on:
      - db
    restart: unless-stopped
    volumes: 
      - ./dds/blocks:/code/blocks
      - ./logs:/code/logs/
    networks:
      dds2-net:
    command: ["python", "scaners/money_scanner.py"]
  redis:
    image: redis:5.0
    restart: unless-stopped
    volumes:
      - ./.docker/redis-data:/data
    networks:
      dds2-net:
  celery:
    build: .
    image: celery:3.1
    command: "celery -A dds worker -l info"
    depends_on:
      - redis
    networks:
      dds2-net:
  celery_beat:
    build: .
    image: celery:3.1
    command: "celery -A dds beat -l info --scheduler django_celery_beat.schedulers:DatabaseScheduler"
    depends_on:
      - redis
    networks:
      dds2-net:
networks:
  dds2-net:
