# Generated by Django 3.1.7 on 2021-06-09 11:38

import dds.store.models
import dds.utilities
from decimal import Decimal
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Collection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('avatar', models.ImageField(blank=True, upload_to=dds.utilities.get_timestamp_path)),
                ('cover', models.ImageField(blank=True, upload_to=dds.utilities.get_timestamp_path)),
                ('address', models.CharField(blank=True, max_length=60, null=True, unique=True)),
                ('symbol', models.CharField(max_length=10, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('standart', models.CharField(choices=[('ERC721', 'ERC721'), ('ERC1155', 'ERC1155')], max_length=10)),
                ('short_url', models.CharField(blank=True, default=None, max_length=30, null=True, unique=True)),
                ('status', models.CharField(choices=[('Pending', 'Pending'), ('Failed', 'Failed'), ('Committed', 'Committed'), ('Burned', 'Burned')], max_length=20)),
                ('deploy_hash', models.CharField(max_length=100, null=True)),
                ('deploy_block', models.IntegerField(default=None, null=True)),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Ownership',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(null=True)),
                ('selling', models.BooleanField(default=False)),
                ('price', models.DecimalField(blank=True, decimal_places=0, default=None, max_digits=78, null=True, validators=[django.core.validators.MinValueValidator(Decimal('1000000000000000'))])),
                ('minimal_bid', models.DecimalField(blank=True, decimal_places=0, default=None, max_digits=78, null=True, validators=[django.core.validators.MinValueValidator(Decimal('1000000000000000'))])),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Tags',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, unique=True)),
            ],
            options={
                'verbose_name_plural': 'Tags',
            },
        ),
        migrations.CreateModel(
            name='Token',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True)),
                ('tx_hash', models.CharField(default='0xE4Bdc4D423FaC9549bdCcabD1b59071E4fe99BDa', max_length=200)),
                ('media', models.FileField(blank=True, upload_to=dds.utilities.get_timestamp_path)),
                ('standart', models.CharField(choices=[('ERC721', 'ERC721'), ('ERC1155', 'ERC1155')], max_length=10)),
                ('total_supply', models.PositiveIntegerField(validators=[dds.store.models.validate_nonzero])),
                ('price', models.DecimalField(blank=True, decimal_places=0, default=None, max_digits=78, null=True, validators=[django.core.validators.MinValueValidator(Decimal('1000000000000000'))])),
                ('minimal_bid', models.DecimalField(blank=True, decimal_places=0, default=None, max_digits=78, null=True, validators=[django.core.validators.MinValueValidator(Decimal('1000000000000000'))])),
                ('currency', models.CharField(default='ETH', max_length=20)),
                ('creator_royalty', models.PositiveIntegerField(validators=[django.core.validators.MaxValueValidator(99)])),
                ('internal_id', models.PositiveIntegerField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('details', models.JSONField(blank=True, default=None, null=True)),
                ('selling', models.BooleanField(default=False)),
                ('status', models.CharField(choices=[('Pending', 'Pending'), ('Failed', 'Failed'), ('Committed', 'Committed'), ('Burned', 'Burned')], max_length=50)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('collection', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='store.collection')),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='token_creator', to=settings.AUTH_USER_MODEL)),
                ('owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='token_owner', to=settings.AUTH_USER_MODEL)),
                ('owners', models.ManyToManyField(null=True, through='store.Ownership', to=settings.AUTH_USER_MODEL)),
                ('tags', models.ManyToManyField(blank=True, null=True, to='store.Tags')),
            ],
        ),
        migrations.AddField(
            model_name='ownership',
            name='token',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='store.token'),
        ),
        migrations.CreateModel(
            name='Bid',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(null=True)),
                ('amount', models.DecimalField(blank=True, decimal_places=0, default=None, max_digits=78, null=True, validators=[django.core.validators.MinValueValidator(Decimal('1000000000000000'))])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('state', models.CharField(choices=[('Pending', 'Pending'), ('Failed', 'Failed'), ('Committed', 'Committed'), ('Burned', 'Burned')], default='Pending', max_length=50)),
                ('token', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='store.token')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
